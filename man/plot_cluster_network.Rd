% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{plot_cluster_network}
\alias{plot_cluster_network}
\alias{plot_cluster_network.default}
\alias{plot_cluster_network.Seurat}
\title{Plot Iterative Differential Clustering network}
\usage{
plot_cluster_network(object, ...)

\method{plot_cluster_network}{default}(
  object,
  IDC_summary,
  color_by = "IDcluster",
  cluster_col = "IDcluster",
  colors = NULL,
  node_size_factor = 7.5,
  edge_size_factor = 1,
  threshold_to_define_feature_active = 1,
  max_distanceToTSS = 1000,
  gene_col = "Gene",
  function_layout = function(g) igraph::layout_as_tree(g, root = 1, circular = TRUE,
    flip.y = FALSE),
  legend = TRUE,
  edge_df = NULL,
  ...
)

\method{plot_cluster_network}{Seurat}(
  object,
  IDC_summary = NULL,
  color_by = "IDcluster",
  cluster_col = "IDcluster",
  colors = NULL,
  node_size_factor = 7.5,
  edge_size_factor = 1,
  threshold_to_define_feature_active = 2,
  function_layout = function(g) igraph::layout_as_tree(g, root = 1, circular = TRUE,
    flip.y = FALSE),
  assay = "RNA",
  legend = TRUE,
  edge_df = NULL,
  ...
)
}
\arguments{
\item{object}{A Seurat object clustered with \code{\link[=iterative_differential_clustering]{iterative_differential_clustering()}}}

\item{...}{Additional parameters passed to the plot function.}

\item{IDC_summary}{Optional. A data.frame of differential
analyses summary outputed by \code{\link[=iterative_differential_clustering]{iterative_differential_clustering()}} when
saving option is TRUE. Use to determine the width of the edges based on the
number of differential features of the given marker.}

\item{color_by}{A character specifying the column of the Seurat
to use for coloring the nodes.}

\item{cluster_col}{A character specifying the column of the
Seurat to use to store the iterative differential clusters.}

\item{colors}{A character vector of colors. If NULL, will take R default
color.}

\item{node_size_factor}{A numeric specifying  a multiplicator of the size of
the nodes.}

\item{edge_size_factor}{A numeric specifying a multiplicator of the
size of the edges.}

\item{threshold_to_define_feature_active}{If color_by is a gene, an integer
specifying the threshold above which a gene is considered as active in any
given cell.}

\item{max_distanceToTSS}{If color_by is a gene, the maximum distance to TSS
to consider a gene  linked to a region. Used only if "color_by" is a gene
name.}

\item{gene_col}{If color_by is a gene, a character specifying the column in
the rowData of the object}

\item{function_layout}{A function of g for the layout of the graph.}

\item{legend}{A logical indicating whether to plot the legend or not.}

\item{edge_df}{(Optional). A data.frame obtained by
\code{\link[=top_enriched_pathways]{top_enriched_pathways()}} containing the top 1 pathway enriched per cluster
to display it on the edges.}

\item{assay}{If color_by is a gene, the assay in which to retrieve the counts.}
}
\value{


A hierarchical network of cluster assignation:
\itemize{
\item Size of nodes reflects the number of cells
\item Width of edges reflects the number of differential features defining a cluster
\item Color of nodes reflects the repartition of cells according to 'color_by'
}

A hierarchical network of cluster assignation:
\itemize{
\item Size of nodes reflects the number of cells
\item Width of edges reflects the number of differential features defining a cluster
\item Color of nodes reflects the repartition of cells according to 'color_by'
}
}
\description{
Plot Iterative Differential Clustering network

Plot Iterative Differential Clustering network

Plot Iterative Differential Clustering network
}
\examples{
# Plotting of Seurat scRNA object (Paired-Tag)
if(requireNamespace("Seurat", quietly=TRUE)){

data("Seu", package = "IDclust")
data("IDC_summary_scRNA", package = "IDclust")

plot_cluster_network(
    object = Seu,
    IDC_summary = IDC_summary_scRNA,
    color_by = "IDcluster",
    cluster_col = "IDcluster",
    colors = NULL,
    node_size_factor = 7.5,
    edge_size_factor = 1,
    function_layout = function(g) igraph::layout_as_tree(g, root = 1, circular = TRUE,
                                                         flip.y = FALSE)
)

# Plotting proportion of cells activating a specific gene in  Seurat scRNA 
# object (Paired-Tag)
plot_cluster_network(
    object = Seu,
    IDC_summary = IDC_summary_scRNA,
    color_by = "Erbb4", # a gene contained in the Seu object
    threshold_to_define_feature_active = 2,
    assay = "RNA",
    cluster_col = "IDcluster",
    colors = NULL,
    node_size_factor = 7.5,
    edge_size_factor = 1,
    function_layout = function(g) igraph::layout_as_tree(g, root = 1, circular = TRUE,
                                                         flip.y = FALSE)
)

# Plotting cluster networ with the pathway information on the edges:
data("IDC_DA_scRNA", package = "IDclust")
edge_df = top_enriched_pathways(
    IDC_DA_scRNA,
    top = 5,
    gene_col = "gene",
    qval.th = 0.1)

plot_cluster_network(
    object = Seu,
    IDC_summary = IDC_summary_scRNA,
    edge_df = edge_df
)
}

# Clustering of scExp scH3K27ac object (Paired-Tag)
if(requireNamespace("ChromSCape", quietly=TRUE)){

data("scExp", package = "IDclust")
data("IDC_summary_scEpigenomics", package = "IDclust")

plot_cluster_network(
    object = scExp,
    IDC_summary = IDC_summary_scEpigenomics,
    color_by = "IDcluster",
    cluster_col = "IDcluster",
    colors = NULL,
    node_size_factor = 7.5,
    edge_size_factor = 1,
    function_layout = function(g) igraph::layout_as_tree(g, root = 1, circular = TRUE,
                                                         flip.y = FALSE),
    edge_df = topmarkers
)

# Plotting proportion of cells activating a specific gene in  scExp scH3K27ac 
# object (Paired-Tag)
plot_cluster_network(
    object = scExp,
    IDC_summary = IDC_summary_scEpigenomics,
    color_by = "Tcf4", # a gene contained in the scExp object
    threshold_to_define_feature_active = 1,
    gene_col = "Gene",
    max_distanceToTSS = 1000,
    cluster_col = "IDcluster",
    colors = NULL,
    node_size_factor = 7.5,
    edge_size_factor = 1,
    function_layout = function(g) igraph::layout_as_tree(g, root = 1, circular = TRUE,
                                                         flip.y = FALSE)
)

# Adding on the edges the 3 top markers of each clusters in scExp H3K27ac
# object (Paired-Tag)

# Adding gene information in the IDC_DA
data("IDC_DA_scEpigenomics", package = "IDclust")
IDC_DA_scEpigenomics = add_gene_to_DA_list(
    scExp = scExp, 
    IDC_DA = IDC_DA_scEpigenomics
)

# Finding the 3 top markers per cluster
topmarkers = top_differential_markers(
    IDC_DA_scEpigenomics,
    top = 3,
    gene_col = "Gene",
    logFC_col = "logFC",
    qvalue_col = "qval",
    order_by = "logFC_col",
    pseudogene_pattern = "Rik|Vmn|Gm|AW"
)

# Concatenate top 3 markers per cluster/cluster_of_origin 
topmarkers = topmarkers \%>\% dplyr::group_by(cluster_of_origin, cluster) \%>\%
 dplyr::summarise(Term = paste(Gene, collapse = " "))

plot_cluster_network(
    object = scExp,
    IDC_summary = IDC_summary_scEpigenomics,
    edge_df = topmarkers
)

}
}
